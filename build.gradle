plugins {
    id 'maven-publish'
	id 'net.neoforged.moddev' version '1.0.21'
}

group = 'de.artemis.laboratoryblocks'
version = "${mc_version}-${mod_version}-fusion"

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

wrapper {
    gradleVersion = '8.10'
    distributionType = Wrapper.DistributionType.ALL
}

sourceSets {
    main.resources {
        srcDir 'src/generated/resources'
    }
}

neoForge {
    version = "${neoforge_version}"

    mods {
        laboratoryblocks {
            sourceSet sourceSets.main
        }
    }

    parchment {
        minecraftVersion = "${parchment_mcversion}"
        mappingsVersion = "${parchment_version}"
    }

    runs {
        client {
            client()
            ideName = 'runLaboratoryBlocksClient'
            programArguments = ['--username', 'ArtemisYouTube', '--uuid', '6611b78f-7fbb-4f41-801a-4e85fd0dca3c']
        }

        server {
            server()
            gameDirectory = project.file('server')
            ideName = 'runLaboratoryBlocksServer'
        }

        data {
            data()
            ideName = 'runLaboratoryBlocksData'
        }
    }
}

repositories {
    maven {
        name = "Blamejared maven"
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = "Intelligence Space repository"
        url = "https://maven.pkg.jetbrains.space/intelligence/p/advancedperipherals/ap-repository"
        credentials {
            username = spaceUsername
            password = spacePassword
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    // JEI
    runtimeOnly "mezz.jei:jei-${mc_version}-neoforge:${jei_version}"
    // Fusion
    implementation "maven.modrinth:fusion-connected-textures:${fusion_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "laboratoryblocks",
                "Specification-Vendor"    : "Artemis",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Artemis"
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}