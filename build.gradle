buildscript {
    repositories {
        maven {
            name = "Minecraft Forge maven"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "Parchment maven"
            url = "https://maven.parchmentmc.org"
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id "maven-publish"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

group = 'de.artemis.laboratoryblocks'
version = "${mc_version}-${mod_version}-fusion"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

wrapper {
    gradleVersion = '7.5.1'
    distributionType = Wrapper.DistributionType.ALL
}

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'laboratoryblocks'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args "--username", "ArtemisYouTube"
            args "--uuid", "6611b78f-7fbb-4f41-801a-4e85fd0dca3c"

            mods {
                laboratoryblocks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'laboratoryblocks'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                laboratoryblocks {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'laboratoryblocks'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                laboratoryblocks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args '--mod', 'laboratoryblocks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                laboratoryblocks {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main.resources {
        srcDir 'src/generated/resources'
    }
    testMod {}
}

repositories {
    flatDir {
        dirs 'lib'
    }

    maven {
        name = "Blamejared maven botania patchouli"
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = "Intelligence Space repository"
        url = "https://maven.pkg.jetbrains.space/intelligence/p/advancedperipherals/ap-repository"
        credentials {
            username = spaceUsername
            password = spacePassword
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    //JEI
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    // Fusion
    implementation fg.deobf("maven.modrinth:fusion-connected-textures:${fusion_version}-forge-mc${mc_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "laboratoryblocks",
                "Specification-Vendor"    : "Artemis",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Artemis",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

